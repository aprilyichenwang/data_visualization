source('~/Google Drive/m4_Multivariate/assignment1/Monte_Hall.R')
help(rexp)
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
mean(y)
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
help(runif)
source('~/Google Drive/m4_Multivariate/assignment2/bus_strategy.R')
source('~/Google Drive/m4_Multivariate/assignment2/bus_strategy.R')
source('~/Google Drive/m4_Multivariate/assignment2/bus_strategy.R')
source('~/Google Drive/m4_Multivariate/assignment2/bus_strategy.R')
source('~/Google Drive/m4_Multivariate/assignment2/bus_strategy.R')
source('~/Google Drive/m4_Multivariate/assignment2/bus_strategy.R')
source('~/Google Drive/m4_Multivariate/assignment2/bus_strategy.R')
print(paste('average required distances to the nearest station basesd on the original strategy and suggested strategy are ', x[1], x[2], sep=""))
print(paste('average required distances to the nearest station basesd on the original strategy and suggested strategy are ', x[1], 'and', x[2], sep=""))
print(paste('average required distances to the nearest station basesd on the original strategy and suggested strategy are ', x[1], 'and', x[2], sep=" "))
print(paste('average required distances to the nearest station basesd on the original and the suggested strategy are', x[1], 'and', x[2], sep=" "))
help("uniroot")
cdf<-function(){
-exp(-a)(a-1)+1-u
}
y2<-c()
for (i in 1:10000){
r<-uniroot(cdf, interval=c(0,100),
u=a[i])$root
y2<-c(y2,r)  #append root into y2
}
hist(y2, breaks=50, col='blue',
main='theretical distribution of Y=X1+X2',
xlab='Y')
cdf<-function(a, u){
-exp(-a)*(a-1)+1-u
}
y2<-c()
for (i in 1:10000){
# u, is a[i] which is the y of the cdf(y), u is passed as the 2nd argument of cdf function
r<-uniroot(cdf, interval=c(0,100),
u=a[i])$root
y2<-c(y2,r)  #append root into y2
}
cdf_equal_to_u<-function(a, u){
1 - exp(-a)*(a+1) - u
}
y2<-c()
y2<-c() # initiate an empty vector
for (i in 1:10000){
# u, is a[i] which is the y of the cdf(y), u is passed as the 2nd argument of cdf function
r<-uniroot(cdf_equal_to_u, interval=c(0,100),
u=a[i])$root
y2<-c(y2,r)  #append root into y2
}
a<-runif(10000)
cdf_equal_to_u<-function(a, u){
1 - exp(-a)*(a+1) - u
}
y2<-c() # initiate an empty vector
for (i in 1:10000){
# u, is a[i] which is the y of the cdf(y), u is passed as the 2nd argument of cdf function
r<-uniroot(cdf_equal_to_u, interval=c(0,100),
u=a[i])$root
y2<-c(y2,r)  #append root into y2
}
hist(y2, breaks=50, col='blue',
main='theretical distribution of Y=X1+X2',
xlab='Y')
y2
mean_y2<-mean(y2)
mean_y2
mean_y
mean_y<-mean(y)
mean_y
help(t.test)
t.test(y, y2)
t<-t.test(y, y2)
t
ks<-ks.test(y, y2)
ks
help(ks)
help(ks.test)
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
hist(y,breaks=70, main='Histogram of y = x1+x2')
par(mfrow=c(2,1))
hist(y,breaks=70, main='Histogram of y = x1+x2')
hist(y2, breaks=50, col='blue',
main='theretical distribution of Y=X1+X2',
xlab='Y')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
source('~/Google Drive/m4_Multivariate/assignment2/sim2.R')
shiny::runApp('git/data_visualization/r_shiny_world_development_indicator/DEMO')
data <- readRDS("healthexp.Rds")
runApp('git/data_visualization/r_shiny_world_development_indicator/DEMO')
data <- readRDS("healthexp.Rds")
data$Region <- as.factor(data$Region)
data
runApp('git/data_visualization/r_shiny_world_development_indicator/DEMO')
setwd("~/git/data_visualization/r_shiny_world_development_indicator/DEMO")
shiny::runApp()
data <- readRDS("healthexp.Rds")
data$Region <- as.factor(data$Region)
data
runApp()
runApp()
setwd("~/git/data_visualization/r_shiny_world_development_indicator")
runApp()
runApp()
runApp()
data<-readRDS('super_data.rds')
data$Region <- as.factor(data$Region)
head(data)
runApp()
names = levels(data$Region)
names
df <- data %>%
filter(Year == input$year) %>%
select(Country.Name, Fertility.Rate, Life.Expectancy,
Region) %>%
arrange(Region)
runApp()
head(data)
runApp()
runApp()
runApp()
data<-readRDS('super_data.rds')
data$Region <- as.factor(data$Region)
head(data)
str(data)
data$Year<-as.numeric(data$Year)
runApp()
data$Year<-as.character(data$Year)
head(data)
str(data)
data$Region <- as.factor(data$Region)
data<-readRDS('super_data.rds')
data$Region <- as.factor(data$Region)
head(data)
str(data)
data$Year
data$Year<-as.character(data$Year)
str(data)
data$Year<-as.numeric(as.character(data$Year))
str(data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/git/data_visualization/r_shiny_world_development_indicator/ss/get_data.R')
head(super_data,20)
source('~/git/data_visualization/r_shiny_world_development_indicator/ss/get_data.R')
# root<-'~/git/data_visualization/r_shiny_world_development_indicator/'
# file_le<-paste(root,'API_SP.DYN.LE00.IN_DS2_en_csv_v2/API_SP.DYN.LE00.IN_DS2_en_csv_v2.csv',sep='')
# file_fertility<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
# file_meta<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/Metadata_Country_API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
source('~/git/data_visualization/r_shiny_world_development_indicator/ss/get_data.R')
head(super_data,20)
library(reshape)
library(dplyr)
root<-'~/git/data_visualization/r_shiny_world_development_indicator/'
file_le<-paste(root,'API_SP.DYN.LE00.IN_DS2_en_csv_v2/API_SP.DYN.LE00.IN_DS2_en_csv_v2.csv',sep='')
file_fertility<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
file_meta<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/Metadata_Country_API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
get_data<-function(filepath){
# clean data, remove NAs, remove useless cols
data<-read.csv(filepath, skip=4)
names(data)<-append(names(data)[1:4],1960:2017)
data<-data[,1:59]
data<-data[complete.cases(data),]
return(data)
}
get_meta_table<-function(){
# get meta_table, remove useless cols
meta_table<-read.csv(file_meta,header = TRUE,na.strings = c('','NA'))
meta_table<-meta_table[,1:3]
return(meta_table)
}
get_merged_data<-function(){
# return two dataframe in a list
# get table- data_le, data_fertility, meta_table
data_le<-get_data(file_le)
data_fertility<-get_data(file_fertility)
meta_table<-get_meta_table()
# merge Region cols into data_le, data_fertility
df_fertility<-merge(data_fertility, meta_table, by='Country.Code')
df_le<-merge(data_le,meta_table, by='Country.Code')
# drop unnecessary cols (Indicator.Name, Indicator.Code, ..)
df_le<-df_le[,c(-3,-4, -61)]
df_fertility<-df_fertility[,c(-3,-4, -61)]
results<-list(df_le,df_fertility)
return(results)
}
melt_table<-function(){
melted_le<-melt(df_le, id=c('Country.Code','Country.Name','Region'))
melted_le<-rename(melted_le, Year=variable,Life.Expectancy=value)
head(melted_le)
melted_fertility<-melt(df_fertility, id=c('Country.Code','Country.Name','Region'))
melted_fertility<-rename(melted_fertility, Year=variable,Fertility.Rate=value)
head(melted_fertility)
results<-list(melted_le,melted_fertility)
return(results)
}
results<-get_merged_data()
df_le<-results[[1]]
df_fertility<-results[[2]]
melted_le<-melt_table()[[1]]
melted_fertility<-melt_table()[[2]]
super_data<-merge(melted_le, melted_fertility, on=c('Country.Code','Country.Name','Region', 'Year'))
super_data<-super_data[complete.cases(super_data), ]
head(super_data,20)
saveRDS(super_data, file='super_data.rds')
#write.csv(super_data_path)
make_plot<-function(yr){
library(ggplot2)
super_data<-merge(melted_le, melted_fertility, on=c('Country.Code','Country.Name','Region', 'Year'))
super_data<-merge(melted_le, melted_fertility, on=c('Country.Code','Country.Name','Region', 'Year'))
)
melted_le
results<-get_merged_data()
df_le<-results[[1]]
df_fertility<-results[[2]]
melted_le<-melt_table()[[1]]
melted_le
root<-'~/git/data_visualization/r_shiny_world_development_indicator/'
file_le<-paste(root,'API_SP.DYN.LE00.IN_DS2_en_csv_v2/API_SP.DYN.LE00.IN_DS2_en_csv_v2.csv',sep='')
file_fertility<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
file_meta<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/Metadata_Country_API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
data<-read.csv(filepath, skip=4)
get_data<-function(filepath){
# clean data, remove NAs, remove useless cols
data<-read.csv(filepath, skip=4)
names(data)<-append(names(data)[1:4],1960:2017)
data<-data[,1:59]
data<-data[complete.cases(data),]
return(data)
}
get_meta_table<-function(){
# get meta_table, remove useless cols
meta_table<-read.csv(file_meta,header = TRUE,na.strings = c('','NA'))
meta_table<-meta_table[,1:3]
return(meta_table)
}
get_merged_data<-function(){
# return two dataframe in a list
# get table- data_le, data_fertility, meta_table
data_le<-get_data(file_le)
data_fertility<-get_data(file_fertility)
meta_table<-get_meta_table()
# merge Region cols into data_le, data_fertility
df_fertility<-merge(data_fertility, meta_table, by='Country.Code')
df_le<-merge(data_le,meta_table, by='Country.Code')
# drop unnecessary cols (Indicator.Name, Indicator.Code, ..)
df_le<-df_le[,c(-3,-4, -61)]
df_fertility<-df_fertility[,c(-3,-4, -61)]
results<-list(df_le,df_fertility)
return(results)
}
melt_table<-function(){
melted_le<-melt(df_le, id=c('Country.Code','Country.Name','Region'))
melted_le<-rename(melted_le, Year=variable,Life.Expectancy=value)
head(melted_le)
melted_fertility<-melt(df_fertility, id=c('Country.Code','Country.Name','Region'))
melted_fertility<-rename(melted_fertility, Year=variable,Fertility.Rate=value)
head(melted_fertility)
results<-list(melted_le,melted_fertility)
return(results)
}
results<-get_merged_data()
results
head(results)
results[[1]]
head(results[[1]])
df_le<-results[[1]]
df_fertility<-results[[2]]
melted_le<-melt_table()[[1]]
df_le
melt_table<-function(df_le, df_fertility){
melted_le<-melt(df_le, id=c('Country.Code','Country.Name','Region'))
melted_le<-rename(melted_le, Year=variable,Life.Expectancy=value)
head(melted_le)
melted_fertility<-melt(df_fertility, id=c('Country.Code','Country.Name','Region'))
melted_fertility<-rename(melted_fertility, Year=variable,Fertility.Rate=value)
head(melted_fertility)
results<-list(melted_le,melted_fertility)
return(results)
}
results<-get_merged_data()
df_le<-results[[1]]
df_fertility<-results[[2]]
melted_le<-melt_table(df_le, df_fertility)[[1]]
library(dplyr)
library(reshape)
melt_table<-function(df_le, df_fertility){
melted_le<-melt(df_le, id=c('Country.Code','Country.Name','Region'))
melted_le<-rename(melted_le, Year=variable,Life.Expectancy=value)
melted_fertility<-melt(df_fertility, id=c('Country.Code','Country.Name','Region'))
melted_fertility<-rename(melted_fertility, Year=variable,Fertility.Rate=value)
results<-list(melted_le,melted_fertility)
return(results)
}
results<-get_merged_data()
df_le<-results[[1]]
df_fertility<-results[[2]]
melted_le<-melt_table(df_le, df_fertility)[[1]]
melted_fertility<-melt_table()[[2]]
df_le<-results[[1]]
df_fertility<-results[[2]]
melted_le<-melt_table(df_le, df_fertility)[[1]]
melted_fertility<-melt_table(df_le, df_fertility)[[2]]
melted_le<-melt_table(df_le, df_fertility)[[1]]
?rename
melted_le
library(reshape)
library(dplyr)
root<-'~/git/data_visualization/r_shiny_world_development_indicator/'
file_le<-paste(root,'API_SP.DYN.LE00.IN_DS2_en_csv_v2/API_SP.DYN.LE00.IN_DS2_en_csv_v2.csv',sep='')
file_fertility<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
file_meta<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/Metadata_Country_API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
get_data<-function(filepath){
# clean data, remove NAs, remove useless cols
data<-read.csv(filepath, skip=4)
names(data)<-append(names(data)[1:4],1960:2017)
data<-data[,1:59]
data<-data[complete.cases(data),]
return(data)
}
get_meta_table<-function(){
# get meta_table, remove useless cols
meta_table<-read.csv(file_meta,header = TRUE,na.strings = c('','NA'))
meta_table<-meta_table[,1:3]
return(meta_table)
}
get_merged_data<-function(){
# return two dataframe in a list
# get table- data_le, data_fertility, meta_table
data_le<-get_data(file_le)
data_fertility<-get_data(file_fertility)
meta_table<-get_meta_table()
# merge Region cols into data_le, data_fertility
df_fertility<-merge(data_fertility, meta_table, by='Country.Code')
df_le<-merge(data_le,meta_table, by='Country.Code')
# drop unnecessary cols (Indicator.Name, Indicator.Code, ..)
df_le<-df_le[,c(-3,-4, -61)]
df_fertility<-df_fertility[,c(-3,-4, -61)]
results<-list(df_le,df_fertility)
return(results)
}
melt_table<-function(df_le, df_fertility){
melted_le<-melt(df_le, id=c('Country.Code','Country.Name','Region'))
melted_le<-rename(melted_le, Year=variable, Life.Expectancy=value)
melted_fertility<-melt(df_fertility, id=c('Country.Code','Country.Name','Region'))
melted_fertility<-rename(melted_fertility, Year=variable,Fertility.Rate=value)
results<-list(melted_le,melted_fertility)
return(results)
}
results<-get_merged_data()
df_le<-results[[1]]
df_fertility<-results[[2]]
head(df_le)
head(df_fertility)
melted_le<-melt_table(df_le, df_fertility)[[1]]
melted_le<-melt(df_le, id=c('Country.Code','Country.Name','Region'))
head(melted_le)
melted_le<-rename(melted_le, Year=variable, Life.Expectancy=value)
rename(melted_le, Year=variable, Life.Expectancy=value)
library(dplyr)
library(reshape)
rename(melted_le, Year=variable, Life.Expectancy=value)
help(rename)
melted_le<-dplyr::rename(melted_le, Year=variable, Life.Expectancy=value)
melted_le<-dplyr::rename(melted_le, Year=variable, Life.Expectancy=value)
melted_fertility<-melt(df_fertility, id=c('Country.Code','Country.Name','Region'))
melted_fertility<-dplyr::rename(melted_fertility, Year=variable,Fertility.Rate=value)
results<-list(melted_le,melted_fertility)
return(results)
}
results<-get_merged_data()
df_le<-results[[1]]
df_fertility<-results[[2]]
melted_le<-melt_table(df_le, df_fertility)[[1]]
melted_fertility<-melt_table(df_le, df_fertility)[[2]]
runApp()
data_le<-get_data(file_le)
data_fertility<-get_data(file_fertility)
meta_table<-get_meta_table()
# merge Region cols into data_le, data_fertility
df_fertility<-merge(data_fertility, meta_table, by='Country.Code')
df_le<-merge(data_le,meta_table, by='Country.Code')
str(df_fertility)
df_fertility<-merge(data_fertility, meta_table, by='Country.Code')
df_le<-merge(data_le,meta_table, by='Country.Code')
df_le
head(df_le)
runApp()
test <- data.frame(X = 1:4, Y = 3:6, Z = 10:12)
test <- data.frame(X = 1:4, Y = 3:6, Z = 11:14)
test
dplyr::select(test, X, Y, 3)
runApp()
runApp()
runApp()
runApp()
diamonds
library(ggplot2)
data("diamonds")
names(diamonds)
data
data$Region
unique(data$Region)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
choices = list(
"East Asia & Pacific" = "East Asia & Pacific",
"Europe & Central Asia" = "Europe & Central Asia",
"Latin America & Caribbean" = "Latin America & Caribbean",
"Middle East & North America" = "Middle East & North Africa",
"North America" = "North America",
"South Asia" = "South Asia",
"Sub-Saharan Africa" = "Sub-Saharan Africa")
choices
library(reshape)
library(dplyr)
root<-'~/git/data_visualization/r_shiny_world_development_indicator/'
file_le<-paste(root,'API_SP.DYN.LE00.IN_DS2_en_csv_v2/API_SP.DYN.LE00.IN_DS2_en_csv_v2.csv',sep='')
file_fertility<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
file_meta<-paste(root,'API_SP.DYN.TFRT.IN_DS2_en_csv_v2/Metadata_Country_API_SP.DYN.TFRT.IN_DS2_en_csv_v2.csv',sep='')
get_data<-function(filepath){
# clean data, remove NAs, remove useless cols
data<-read.csv(filepath, skip=4)
names(data)<-append(names(data)[1:4],1960:2017)
data<-data[,1:59]
data<-data[complete.cases(data),]
return(data)
}
get_meta_table<-function(){
# get meta_table, remove useless cols
meta_table<-read.csv(file_meta,header = TRUE,na.strings = c('','NA'))
meta_table<-meta_table[,1:3]
return(meta_table)
}
get_merged_data<-function(){
# return two dataframe in a list
# get table- data_le, data_fertility, meta_table
data_le<-get_data(file_le)
data_fertility<-get_data(file_fertility)
meta_table<-get_meta_table()
# merge Region cols into data_le, data_fertility
df_fertility<-merge(data_fertility, meta_table, by='Country.Code')
df_le<-merge(data_le,meta_table, by='Country.Code')
# drop unnecessary cols (Indicator.Name, Indicator.Code, ..)
df_le<-df_le[,c(-3,-4, -61)]
df_fertility<-df_fertility[,c(-3,-4, -61)]
results<-list(df_le,df_fertility)
return(results)
}
melt_table<-function(df_le, df_fertility){
melted_le<-melt(df_le, id=c('Country.Code','Country.Name','Region'))
melted_le<-dplyr::rename(melted_le, Year=variable, Life.Expectancy=value)
melted_fertility<-melt(df_fertility, id=c('Country.Code','Country.Name','Region'))
melted_fertility<-dplyr::rename(melted_fertility, Year=variable,Fertility.Rate=value)
results<-list(melted_le,melted_fertility)
return(results)
}
results<-get_merged_data()
df_le<-results[[1]]
df_fertility<-results[[2]]
melted_le<-melt_table(df_le, df_fertility)[[1]]
melted_fertility<-melt_table(df_le, df_fertility)[[2]]
super_data<-merge(melted_le, melted_fertility, on=c('Country.Code','Country.Name','Region', 'Year'))
super_data<-super_data[complete.cases(super_data), ]
super_data$Region <- as.factor(super_data$Region)
head(super_data,20)
super_data$Country.Region
super_data$Region
unique(super_data$Region)
as.character(unique(super_data$Region))
list(as.character(unique(super_data$Region)))
choices
x<-as.character(unique(super_data$Region))
x
str(super_data)
runApp()
rm(list=ls())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
